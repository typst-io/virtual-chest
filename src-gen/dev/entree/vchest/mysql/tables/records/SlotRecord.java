/*
 * This file is generated by jOOQ.
 */
package dev.entree.vchest.mysql.tables.records;


import dev.entree.vchest.mysql.tables.Slot;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SlotRecord extends UpdatableRecordImpl<SlotRecord> implements Record4<Integer, Integer, Integer, byte[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mc_virtual_chest.slot.slot_slot</code>.
     */
    public void setSlotSlot(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mc_virtual_chest.slot.slot_slot</code>.
     */
    public Integer getSlotSlot() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mc_virtual_chest.slot.slot_chest_num</code>.
     */
    public void setSlotChestNum(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mc_virtual_chest.slot.slot_chest_num</code>.
     */
    public Integer getSlotChestNum() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mc_virtual_chest.slot.slot_player_id</code>.
     */
    public void setSlotPlayerId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>mc_virtual_chest.slot.slot_player_id</code>.
     */
    public Integer getSlotPlayerId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>mc_virtual_chest.slot.slot_item_bytes</code>.
     */
    public void setSlotItemBytes(byte[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>mc_virtual_chest.slot.slot_item_bytes</code>.
     */
    public byte[] getSlotItemBytes() {
        return (byte[]) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Integer, Integer, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, byte[]> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, byte[]> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Slot.SLOT.SLOT_SLOT;
    }

    @Override
    public Field<Integer> field2() {
        return Slot.SLOT.SLOT_CHEST_NUM;
    }

    @Override
    public Field<Integer> field3() {
        return Slot.SLOT.SLOT_PLAYER_ID;
    }

    @Override
    public Field<byte[]> field4() {
        return Slot.SLOT.SLOT_ITEM_BYTES;
    }

    @Override
    public Integer component1() {
        return getSlotSlot();
    }

    @Override
    public Integer component2() {
        return getSlotChestNum();
    }

    @Override
    public Integer component3() {
        return getSlotPlayerId();
    }

    @Override
    public byte[] component4() {
        return getSlotItemBytes();
    }

    @Override
    public Integer value1() {
        return getSlotSlot();
    }

    @Override
    public Integer value2() {
        return getSlotChestNum();
    }

    @Override
    public Integer value3() {
        return getSlotPlayerId();
    }

    @Override
    public byte[] value4() {
        return getSlotItemBytes();
    }

    @Override
    public SlotRecord value1(Integer value) {
        setSlotSlot(value);
        return this;
    }

    @Override
    public SlotRecord value2(Integer value) {
        setSlotChestNum(value);
        return this;
    }

    @Override
    public SlotRecord value3(Integer value) {
        setSlotPlayerId(value);
        return this;
    }

    @Override
    public SlotRecord value4(byte[] value) {
        setSlotItemBytes(value);
        return this;
    }

    @Override
    public SlotRecord values(Integer value1, Integer value2, Integer value3, byte[] value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SlotRecord
     */
    public SlotRecord() {
        super(Slot.SLOT);
    }

    /**
     * Create a detached, initialised SlotRecord
     */
    public SlotRecord(Integer slotSlot, Integer slotChestNum, Integer slotPlayerId, byte[] slotItemBytes) {
        super(Slot.SLOT);

        setSlotSlot(slotSlot);
        setSlotChestNum(slotChestNum);
        setSlotPlayerId(slotPlayerId);
        setSlotItemBytes(slotItemBytes);
    }
}
