/*
 * This file is generated by jOOQ.
 */
package dev.entree.vchest.sqlite.tables.records;


import dev.entree.vchest.sqlite.tables.Chest;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChestRecord extends UpdatableRecordImpl<ChestRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>chest.chest_num</code>.
     */
    public void setChestNum(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>chest.chest_num</code>.
     */
    public Integer getChestNum() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chest.chest_player_id</code>.
     */
    public void setChestPlayerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>chest.chest_player_id</code>.
     */
    public Integer getChestPlayerId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Chest.CHEST.CHEST_NUM;
    }

    @Override
    public Field<Integer> field2() {
        return Chest.CHEST.CHEST_PLAYER_ID;
    }

    @Override
    public Integer component1() {
        return getChestNum();
    }

    @Override
    public Integer component2() {
        return getChestPlayerId();
    }

    @Override
    public Integer value1() {
        return getChestNum();
    }

    @Override
    public Integer value2() {
        return getChestPlayerId();
    }

    @Override
    public ChestRecord value1(Integer value) {
        setChestNum(value);
        return this;
    }

    @Override
    public ChestRecord value2(Integer value) {
        setChestPlayerId(value);
        return this;
    }

    @Override
    public ChestRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChestRecord
     */
    public ChestRecord() {
        super(Chest.CHEST);
    }

    /**
     * Create a detached, initialised ChestRecord
     */
    public ChestRecord(Integer chestNum, Integer chestPlayerId) {
        super(Chest.CHEST);

        setChestNum(chestNum);
        setChestPlayerId(chestPlayerId);
    }
}
